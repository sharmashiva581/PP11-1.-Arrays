import java.io.*;
import java.util.*;

public class Main{

public static void main(String[] args) throws Exception {
    Scanner scn = new Scanner(System.in);
    // write your code here
    int n= scn.nextInt();
    int a[] = new int[n];
    for(int i=0 ; i< n ; i++){
        a[i] = scn.nextInt();
    }
    int b[] = new int[n]; // it will store the binary values
    int ts = (int)Math.pow(2, n); // ts = total no of subsets
   https://embed.tawk.to/_s/v4/assets/images/default-profile.svg
    for(int num=0 ; num< ts ; num++){
        int temp = num;
         int idx = b.length-1;
        while(temp > 0){
       
           int digit = temp % 2;
            temp = temp / 2;
           b[idx] = digit;
           idx--;
        }
        // PRINT SUBSETS
            for(int j=0 ; j< b.length ; j++){
                if(b[j] ==0){
                    // means element is absent
                    System.out.print("-\t");
                }
                else {
                    //means element is want to come b[j] == 1
                    System .out.print(a[j] + "\t");
                }
            }
        System.out.println();
    }
    
 }

}

**********************************************************************************************************************************************************************************

import java.io.*;
import java.util.*;

public class Main{

public static void main(String[] args) throws Exception {
    
    //  **********************   USING RECURSION  ***********************
    
    Scanner scn = new Scanner(System.in);
    int n= scn.nextInt();
    int arr[] = new int[n];
    for(int i=0 ; i< n ; i++){
        arr[i] = scn.nextInt();
    }
    
    printSubsets(arr , 0 , "");
    
    
 }
    public static void printSubsets(int arr[] , int idx , String set){
        if(idx == arr.length){
            System.out.println(set);
            return;
        }
        
          // when idx value don't want to come
         printSubsets(arr , idx+1 , set + "-\t");
        
        // when idx value want to come
        printSubsets(arr , idx+1, set+ arr[idx] + "\t");
        
       
    } 

}
